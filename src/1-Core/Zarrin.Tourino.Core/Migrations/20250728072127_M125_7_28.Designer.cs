// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zarrin.Tourino.Core.DBContext;

#nullable disable

namespace Zarrin.Tourino.Core.Migrations
{
    [DbContext(typeof(DbData))]
    [Migration("20250728072127_M125_7_28")]
    partial class M125_7_28
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Zarrin.Tourino.Core.Entities.ActivityArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Province")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TourLeaderModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TourLeaderModelId");

                    b.ToTable("ActivityArea");
                });

            modelBuilder.Entity("Zarrin.Tourino.Core.Entities.TourLeaderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("ActivityTours")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfSingup")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("TEXT");

                    b.Property<int>("ExperienceLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeaderAccountLevel")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("NationalCode")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfileImageForeignKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TourLeaders");

                    b.HasDiscriminator().HasValue("TourLeaderModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Zarrin.Tourino.Core.Entities.TourLeaderVerification", b =>
                {
                    b.HasBaseType("Zarrin.Tourino.Core.Entities.TourLeaderModel");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("TourLeaderVerification");
                });

            modelBuilder.Entity("Zarrin.Tourino.Core.Entities.ActivityArea", b =>
                {
                    b.HasOne("Zarrin.Tourino.Core.Entities.TourLeaderModel", null)
                        .WithMany("ActivityArea")
                        .HasForeignKey("TourLeaderModelId");
                });

            modelBuilder.Entity("Zarrin.Tourino.Core.Entities.TourLeaderModel", b =>
                {
                    b.Navigation("ActivityArea");
                });
#pragma warning restore 612, 618
        }
    }
}
